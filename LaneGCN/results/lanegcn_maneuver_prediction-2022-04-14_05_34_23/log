Out[8]: 
{'score': tensor([[0.3432, 0.2286, 0.4281],
         [0.3425, 0.2285, 0.4291],
         [0.3417, 0.2290, 0.4293],
         [0.3419, 0.2288, 0.4294],
         [0.3427, 0.2287, 0.4286],
         [0.3426, 0.2286, 0.4288],
         [0.3419, 0.2285, 0.4296],
         [0.3424, 0.2285, 0.4291],
         [0.3421, 0.2287, 0.4293],
         [0.3419, 0.2286, 0.4295],
         [0.3412, 0.2287, 0.4301],
         [0.3416, 0.2289, 0.4296],
         [0.3424, 0.2288, 0.4288],
         [0.3423, 0.2287, 0.4290],
         [0.3414, 0.2288, 0.4298],
         [0.3416, 0.2287, 0.4297],
         [0.3412, 0.2287, 0.4302],
         [0.3426, 0.2286, 0.4287],
         [0.3424, 0.2285, 0.4291],
         [0.3428, 0.2285, 0.4286],
         [0.3421, 0.2287, 0.4292],
         [0.3418, 0.2287, 0.4295],
         [0.3428, 0.2286, 0.4286],
         [0.3434, 0.2286, 0.4280],
         [0.3414, 0.2289, 0.4297],
         [0.3426, 0.2289, 0.4285],
         [0.3432, 0.2289, 0.4279]], device='cuda:0', grad_fn=<SoftmaxBackward0>),
 'score_GT': tensor([[0, 1, 0],
         [0, 0, 1],
         [0, 1, 0],
         [0, 1, 0],
         [1, 0, 0],
         [1, 0, 0],
         [0, 0, 1],
         [1, 0, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [1, 0, 0],
         [1, 0, 0],
         [0, 1, 0],
         [1, 0, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 1, 0],
         [0, 0, 1]], device='cuda:0')}
Out[10]: 
{'loss_maneuver': tensor(31.2945, device='cuda:0', grad_fn=<NllLossBackward0>),
 'num_maneuver': 27,
 'loss': tensor(1.1591, device='cuda:0', grad_fn=<DivBackward0>)}
Out[12]: 
{'loss_maneuver': 31.294498443603516,
 'num_maneuver': 27.0,
 'pred_maneuver': [2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2],
 'gt_maneuver': [array([0, 1, 0], dtype=int64),
  array([0, 0, 1], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 0, 1], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 0, 1], dtype=int64)]}
Out[13]: 
{'pred_maneuver': [2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2,
  2],
 'gt_maneuver': [array([0, 1, 0], dtype=int64),
  array([0, 0, 1], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 0, 1], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([1, 0, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 1, 0], dtype=int64),
  array([0, 0, 1], dtype=int64)]}
Out[15]: 
{'loss_maneuver': tensor(31.2945, device='cuda:0', grad_fn=<NllLossBackward0>),
 'num_maneuver': 27,
 'loss': tensor(1.1591, device='cuda:0', grad_fn=<DivBackward0>)}
Out[17]: True
